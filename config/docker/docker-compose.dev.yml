version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: his-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: his
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - his-dev-network

  redis:
    image: redis:7-alpine
    container_name: his-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - his-dev-network

  nats:
    image: nats:2.9-alpine
    container_name: his-nats-dev
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - his-dev-network

  # Development Tools
  mongo-express:
    image: mongo-express:latest
    container_name: his-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - his-dev-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: his-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - his-dev-network

  # Monitoring for Development
  prometheus:
    image: prom/prometheus:latest
    container_name: his-prometheus-dev
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - his-dev-network

  grafana:
    image: grafana/grafana:latest
    container_name: his-grafana-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - his-dev-network

volumes:
  mongodb_dev_data:
  redis_dev_data:
  prometheus_dev_data:
  grafana_dev_data:

networks:
  his-dev-network:
    driver: bridge
