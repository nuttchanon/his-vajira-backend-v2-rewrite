version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: his-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: his
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - his-network

  redis:
    image: redis:7-alpine
    container_name: his-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - his-network

  nats:
    image: nats:2.9-alpine
    container_name: his-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - his-network

  # API Gateway
  api-gateway:
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile
    container_name: his-api-gateway
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3001:3001"
      - "3031:3031"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Auth Service
  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    container_name: his-auth-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3003:3003"
      - "3032:3032"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Patient Service
  patient-service:
    build:
      context: ../services/patient-service
      dockerfile: Dockerfile
    container_name: his-patient-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3002:3002"
      - "3030:3030"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Order Service
  order-service:
    build:
      context: ../services/order-service
      dockerfile: Dockerfile
    container_name: his-order-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3004:3004"
      - "3041:3041"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Inventory Service
  inventory-service:
    build:
      context: ../services/inventory-service
      dockerfile: Dockerfile
    container_name: his-inventory-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3005:3005"
      - "3033:3033"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Encounter Service
  encounter-service:
    build:
      context: ../services/encounter-service
      dockerfile: Dockerfile
    container_name: his-encounter-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3006:3006"
      - "3034:3034"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Diagnostic Service
  diagnostic-service:
    build:
      context: ../services/diagnostic-service
      dockerfile: Dockerfile
    container_name: his-diagnostic-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3007:3007"
      - "3035:3035"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Financial Service
  financial-service:
    build:
      context: ../services/financial-service
      dockerfile: Dockerfile
    container_name: his-financial-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3008:3008"
      - "3036:3036"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Eform Service
  eform-service:
    build:
      context: ../services/eform-service
      dockerfile: Dockerfile
    container_name: his-eform-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3009:3009"
      - "3037:3037"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Filestore Service
  filestore-service:
    build:
      context: ../services/filestore-service
      dockerfile: Dockerfile
    container_name: his-filestore-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3010:3010"
      - "3038:3038"
    volumes:
      - filestore_data:/app/uploads
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Messaging Service
  messaging-service:
    build:
      context: ../services/messaging-service
      dockerfile: Dockerfile
    container_name: his-messaging-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3011:3011"
      - "3039:3039"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Printing Service
  printing-service:
    build:
      context: ../services/printing-service
      dockerfile: Dockerfile
    container_name: his-printing-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/his?authSource=admin
      - REDIS_URI=redis://:redis123@redis:6379
      - NATS_URI=nats://nats:4222
    ports:
      - "3012:3012"
      - "3040:3040"
    depends_on:
      - mongodb
      - redis
      - nats
    networks:
      - his-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: his-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - his-network

  grafana:
    image: grafana/grafana:latest
    container_name: his-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - his-network

volumes:
  mongodb_data:
  redis_data:
  filestore_data:
  prometheus_data:
  grafana_data:

networks:
  his-network:
    driver: bridge
